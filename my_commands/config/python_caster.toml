[functions]
"app context"          = "AppContext"
"choice"               = "Choice"
"context action"       = "ContextAction"
"dictation"            = "Dictation"
"execute"              = "execute"
"function"             = "Function"
"run command"          = "RunCommand"
"integer ref"          = "IntegerRef"
"short integer ref"    = "ShortIntegerRef"
"key"                  = "Key"
"mouse"                = "Mouse"
"repeat"               = "Repeat"
"text"                 = "Text"


[misc]
"breathe add commands" = ["Breathe.add_commands()", "left, enter"]

[templates]
"language rule" = '''
pronunciation =
function_prefix = "fun"
template_prefix = "template"

[functions]

[commands]

[templates]

from dragonfly import Dictation, MappingRule, Choice, Function, IntegerRef
from caster.lib.dfplus.actions import Key, Text, Mouse, Store, Retrieve
from caster.lib.dfplus.context import AppContext

from caster.lib import control, utilities, execution
from caster.lib.merge.mergerule import MergeRule

BINDINGS = utilities.load_toml_relative("config/language_name.toml")

class classNameNon(MergeRule):
    mapping = {
        BINDINGS["template_prefix"] + " <template>":
            Function(execution.template),

        "configure " + BINDINGS["pronunciation"]:
            Function(utilities.load_config, config_name="language_name.toml"),
    }
    extras = [
        Choice("template", BINDINGS["templates"]),
    ]

class className(MergeRule):
    non = classNameNon
    mwith = "Core"
    mcontext = AppContext(title=".")
    pronunciation = BINDINGS["pronunciation"]

    mapping = {
        "<command>":
            Alternating("command"),

        BINDINGS["function_prefix"] + " <fun>":
            Store(same_is_okay=False) + Text("%(fun)s()") + Key("left") + Retrieve(action_if_text="right"),
    }

    extras = [
        Choice("fun",    BINDINGS["functions"]),
        Choice("command",BINDINGS["commands"]),
    ]

    defaults = {}


control.global_rule(className())
'''

"CCR" = '''
from dragonfly import Dictation, MappingRule, Choice, Function, IntegerRef
from caster.lib.dfplus.actions import Key, Text, Mouse

from caster.lib import control, utilities
from caster.lib.merge.mergerule import MergeRule

BINDINGS = utilities.load_toml_relative("config/.toml")

class classNameNon(MergeRule):
    mapping = {

    }

class className(MergeRule):
    non = classNameNon
    pronunciation = BINDINGS["pronunciation"]

    mapping = {

    }

    extras = [
    ]

    defaults = {}


control.global_rule(className())
'''

"App" = '''
from dragonfly import (Grammar, Pause, Choice, Function, IntegerRef)
from caster.lib.dfplus.actions import Key, Text
from caster.lib.dfplus.context import AppContext

from caster.lib.merge.mergerule import MergeRule


class AppNameRule(MergeRule):
    pronunciation = "AppName"
    mcontext = AppContext(executable="AppName", title="AppName")

    mapping = {

    }
    extras = [

    ]
    defaults = {

    }

control.non_ccr_app_rule(AppNameRule())
'''